@model Show
@{
    ViewData["Title"] = Model.Title;
}

<style>
    /* Base styles */
    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
        background-color: #f9fafb;
        color: #1f2937;
        line-height: 1.5;
    }

    /* Container */
    .container {
        width: 100%;
        max-width: 1280px;
        margin-left: auto;
        margin-right: auto;
        padding-left: 1rem;
        padding-right: 1rem;
        padding-top: 2rem;
        padding-bottom: 2rem;
    }

    /* Back button */
    .back-link {
        display: inline-flex;
        align-items: center;
        color: #4f46e5;
        text-decoration: none;
        margin-bottom: 1.5rem;
        transition: color 0.2s;
    }

        .back-link:hover {
            color: #4338ca;
        }

    .back-icon {
        width: 1.25rem;
        height: 1.25rem;
        margin-right: 0.5rem;
    }

    /* Details card */
    .details-card {
        background-color: white;
        border-radius: 0.75rem;
        overflow: hidden;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }

    /* Hero image section */
    .hero-container {
        position: relative;
        height: 24rem;
    }

    .hero-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .hero-overlay {
        position: absolute;
        inset: 0;
        background-image: linear-gradient(to top, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.6), transparent);
    }

    .hero-content {
        position: absolute;
        bottom: 0;
        left: 0;
        padding: 1.5rem;
    }

    .hero-badges {
        display: flex;
        gap: 0.5rem;
        margin-bottom: 0.5rem;
    }

    .badge {
        background-color: #e0e7ff;
        color: #4338ca;
        font-size: 0.75rem;
        font-weight: 600;
        padding: 0.25rem 0.625rem;
        border-radius: 9999px;
    }

    .hero-title {
        color: white;
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    @@media (min-width: 768px) {
        .hero-title

    {
        font-size: 2.5rem;
    }

    }

    .hero-studio {
        color: #d1d5db;
        font-size: 0.875rem;
    }

    @@media (min-width: 768px) {
        .hero-studio

    {
        font-size: 1rem;
        max-width: 36rem;
    }

    }

    /* Content section */
    .details-content {
        padding: 1.5rem;
    }

    /* Action buttons */
    .actions-container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
        margin-bottom: 1.5rem;
    }

    .action-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        background-color: white;
        border: 1px solid #d1d5db;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 500;
        color: #4b5563;
        cursor: pointer;
        transition: background-color 0.3s, border-color 0.3s;
    }

        .action-btn:hover {
            background-color: #f9fafb;
        }

    .action-icon {
        width: 1.25rem;
        height: 1.25rem;
        margin-right: 0.5rem;
    }

    .action-icon-heart {
        color: #9ca3af;
    }

        .action-icon-heart.active {
            color: #ef4444;
        }

    .action-icon-eye {
        color: #9ca3af;
    }

        .action-icon-eye.active {
            color: #4f46e5;
        }

    .action-icon-bookmark {
        color: #9ca3af;
    }

        .action-icon-bookmark.active {
            color: #eab308;
        }

    /* Rating stars */
    .rating-container {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .rating-stars {
        display: flex;
    }

    .star {
        width: 1.25rem;
        height: 1.25rem;
    }

    .star-filled {
        color: #fbbf24;
    }

    .star-empty {
        color: #d1d5db;
    }

    .rating-text {
        margin-left: 0.5rem;
        font-size: 0.875rem;
        font-weight: 700;
        color: #1f2937;
    }

    /* Description */
    .description-container {
        margin-bottom: 2rem;
    }

    .section-title {
        font-size: 1.25rem;
        font-weight: 700;
        color: #1f2937;
        margin-bottom: 0.75rem;
    }

    .description-text {
        color: #4b5563;
        line-height: 1.625;
    }

    /* Details section */
    .details-section {
        border-top: 1px solid #e5e7eb;
        padding-top: 1.5rem;
    }

    .details-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1rem;
    }

    @@media (min-width: 768px) {
        .details-grid

    {
        grid-template-columns: 1fr 1fr;
    }

    }

    .detail-item-label {
        font-size: 0.875rem;
        font-weight: 500;
        color: #6b7280;
    }

    .detail-item-value {
        margin-top: 0.25rem;
        font-size: 1rem;
        font-weight: 600;
        color: #1f2937;
    }

    /* Recommendations section */
    .recommendations {
        margin-top: 3rem;
    }

    .recommendations-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1f2937;
        margin-bottom: 1.5rem;
    }

    .recommendations-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }

    @@media (min-width: 640px) {
        .recommendations-grid

    {
        grid-template-columns: repeat(2, 1fr);
    }

    }

    @@media (min-width: 768px) {
        .recommendations-grid

    {
        grid-template-columns: repeat(3, 1fr);
    }

    }

    @@media (min-width: 1024px) {
        .recommendations-grid

    {
        grid-template-columns: repeat(4, 1fr);
    }

    }

    .recommendation-card {
        background-color: white;
        border-radius: 0.75rem;
        overflow: hidden;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .recommendation-card:hover {
            transform: translateY(-0.5rem);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }

    .recommendation-image-container {
        position: relative;
    }

    .recommendation-image {
        width: 100%;
        height: 12rem;
        object-fit: cover;
    }

    .recommendation-badge {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
        background-color: #e0e7ff;
        color: #4338ca;
        font-size: 0.75rem;
        font-weight: 500;
        padding: 0.25rem 0.625rem;
        border-radius: 9999px;
    }

    .recommendation-content {
        padding: 1rem;
    }

    .recommendation-title {
        font-weight: 700;
        color: #1f2937;
    }

    .recommendation-studio {
        font-size: 0.875rem;
        color: #6b7280;
        margin-top: 0.25rem;
    }

    /* Toast notifications */
    .toast {
        position: fixed;
        bottom: 1rem;
        right: 1rem;
        background-color: #1f2937;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        transform: translateY(1rem);
        opacity: 0;
        transition: all 0.3s ease;
        z-index: 50;
    }

        .toast.visible {
            transform: translateY(0);
            opacity: 1;
        }
</style>

<div class="container mx-auto px-4 py-8">
    <!-- Botón de regreso -->
    <div class="mb-6">
        <a href="/" class="inline-flex items-center text-indigo-600 hover:text-indigo-800">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
            Volver al catálogo
        </a>
    </div>

    <div class="bg-white rounded-xl shadow-lg overflow-hidden">
        <!-- Encabezado con imagen destacada -->
        <div class="relative h-96">
            <img class="w-full h-full object-cover" src="@Model.Image" alt="@Model.Title">
            <div class="absolute inset-0 bg-gradient-to-t from-black via-black/60 to-transparent"></div>
            <div class="absolute bottom-0 left-0 p-6">
                <div class="flex items-center space-x-2 mb-2">
                    <span class="bg-indigo-100 text-indigo-800 text-xs font-semibold px-2.5 py-0.5 rounded-full">@Model.Genre</span>
                    <span class="bg-indigo-100 text-indigo-800 text-xs font-semibold px-2.5 py-0.5 rounded-full">@Model.ReleaseDate.Year</span>
                </div>
                <h1 class="text-3xl md:text-4xl font-bold text-white mb-2">@Model.Title</h1>
                <p class="text-gray-300 text-sm md:text-base max-w-2xl">@Model.Studio</p>
            </div>
        </div>

        <!-- Cuerpo con detalles y acciones -->
        <div class="p-6">
            <!-- Acciones -->
            <div class="flex flex-wrap gap-3 mb-6">
                <button id="btnMeGusta" class="flex items-center justify-center px-4 py-2 bg-white border border-gray-300 rounded-full text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors">
                    <svg id="heartOutline" class="w-5 h-5 mr-2 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                    </svg>
                    <svg id="heartFilled" class="w-5 h-5 mr-2 text-red-500 hidden" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd" />
                    </svg>
                    Me gusta
                </button>

                <button id="btnViendo" class="flex items-center justify-center px-4 py-2 bg-white border border-gray-300 rounded-full text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors">
                    <svg id="eyeOutline" class="w-5 h-5 mr-2 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                    </svg>
                    <svg id="eyeFilled" class="w-5 h-5 mr-2 text-indigo-600 hidden" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
                        <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
                    </svg>
                    Viendo
                </button>

                <button id="btnGuardar" class="flex items-center justify-center px-4 py-2 bg-white border border-gray-300 rounded-full text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors">
                    <svg id="bookmarkOutline" class="w-5 h-5 mr-2 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z" />
                    </svg>
                    <svg id="bookmarkFilled" class="w-5 h-5 mr-2 text-yellow-500 hidden" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M5 4a2 2 0 012-2h6a2 2 0 012 2v14l-5-2.5L5 18V4z" />
                    </svg>
                    Guardar
                </button>
            </div>

            <!-- Rating -->
            <div class="flex items-center mb-6">
                <div class="flex items-center">
                    @for (int i = 0; i < 5; i++)
                    {
                        if (i < Model.Rating)
                        {
                            <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                            </svg>
                        }
                        else
                        {
                            <svg class="w-5 h-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                            </svg>
                        }
                    }
                </div>
                <p class="ml-2 text-sm font-bold text-gray-900">@Model.Rating/5</p>
            </div>

            <!-- Descripción -->
            <div class="mb-8">
                <h2 class="text-xl font-bold text-gray-900 mb-3">Descripción</h2>
                <p class="text-gray-700 leading-relaxed">@Model.Description</p>
            </div>

            <!-- Detalles -->
            <div class="border-t border-gray-200 pt-6">
                <h2 class="text-xl font-bold text-gray-900 mb-4">Detalles</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <h3 class="text-sm font-medium text-gray-500">Estudio</h3>
                        <p class="mt-1 text-base font-semibold text-gray-900">@Model.Studio</p>
                    </div>
                    <div>
                        <h3 class="text-sm font-medium text-gray-500">Género</h3>
                        <p class="mt-1 text-base font-semibold text-gray-900">@Model.Genre</p>
                    </div>
                    <div>
                        <h3 class="text-sm font-medium text-gray-500">Fecha de lanzamiento</h3>
                        <p class="mt-1 text-base font-semibold text-gray-900">@Model.ReleaseDate.ToString("dd MMMM, yyyy")</p>
                    </div>
                    <div>
                        <h3 class="text-sm font-medium text-gray-500">ID</h3>
                        <p class="mt-1 text-base font-semibold text-gray-900">@Model.Id</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Sección de recomendaciones (simulada) -->
    <div class="mt-12">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Títulos similares</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            <div class="bg-white rounded-xl overflow-hidden shadow-lg transition-all duration-300 hover:shadow-xl hover:-translate-y-2">
                <div class="relative">
                    <img src="/api/placeholder/300/200" alt="placeholder" class="w-full h-48 object-cover">
                    <div class="absolute top-0 right-0 m-2">
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800">
                            @Model.Genre
                        </span>
                    </div>
                </div>
                <div class="p-4">
                    <h3 class="font-bold text-gray-900">Título similar 1</h3>
                    <p class="text-sm text-gray-500 mt-1">Estudio XYZ</p>
                </div>
            </div>
            <div class="bg-white rounded-xl overflow-hidden shadow-lg transition-all duration-300 hover:shadow-xl hover:-translate-y-2">
                <div class="relative">
                    <img src="/api/placeholder/300/200" alt="placeholder" class="w-full h-48 object-cover">
                    <div class="absolute top-0 right-0 m-2">
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800">
                            @Model.Genre
                        </span>
                    </div>
                </div>
                <div class="p-4">
                    <h3 class="font-bold text-gray-900">Título similar 2</h3>
                    <p class="text-sm text-gray-500 mt-1">Estudio XYZ</p>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Me gusta
        const btnMeGusta = document.getElementById('btnMeGusta');
        const heartOutline = document.getElementById('heartOutline');
        const heartFilled = document.getElementById('heartFilled');

        btnMeGusta.addEventListener('click', function() {
            heartOutline.classList.toggle('hidden');
            heartFilled.classList.toggle('hidden');

            if (!heartFilled.classList.contains('hidden')) {
                showToast('Añadido a tus favoritos');
            } else {
                showToast('Eliminado de tus favoritos');
            }
        });

        // Viendo
        const btnViendo = document.getElementById('btnViendo');
        const eyeOutline = document.getElementById('eyeOutline');
        const eyeFilled = document.getElementById('eyeFilled');

        btnViendo.addEventListener('click', function() {
            eyeOutline.classList.toggle('hidden');
            eyeFilled.classList.toggle('hidden');

            if (!eyeFilled.classList.contains('hidden')) {
                showToast('Añadido a "Viendo actualmente"');
            } else {
                showToast('Eliminado de "Viendo actualmente"');
            }
        });

        // Guardar
        const btnGuardar = document.getElementById('btnGuardar');
        const bookmarkOutline = document.getElementById('bookmarkOutline');
        const bookmarkFilled = document.getElementById('bookmarkFilled');

        btnGuardar.addEventListener('click', function() {
            bookmarkOutline.classList.toggle('hidden');
            bookmarkFilled.classList.toggle('hidden');

            if (!bookmarkFilled.classList.contains('hidden')) {
                showToast('Guardado para ver más tarde');
            } else {
                showToast('Eliminado de guardados');
            }
        });

        // Función para mostrar notificaciones toast
        function showToast(message) {
            // Crear elemento toast
            const toast = document.createElement('div');
            toast.className = 'fixed bottom-4 right-4 bg-gray-800 text-white py-2 px-4 rounded-lg shadow-lg transform transition-all duration-500 translate-y-0 opacity-0';
            toast.textContent = message;

            // Añadir al DOM
            document.body.appendChild(toast);

            // Mostrar el toast (pequeña demora para permitir la transición)
            setTimeout(() => {
                toast.classList.remove('translate-y-0', 'opacity-0');
                toast.classList.add('translate-y-0', 'opacity-100');
            }, 10);

            // Ocultar después de 3 segundos
            setTimeout(() => {
                toast.classList.remove('opacity-100');
                toast.classList.add('opacity-0', 'translate-y-2');

                // Eliminar del DOM después de la transición
                setTimeout(() => {
                    document.body.removeChild(toast);
                }, 300);
            }, 3000);
        }
    });
</script>